<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Perusahaan extends CI_Controller {

	/**
	*	 Generated by Generator
	**/
	private $data_role = array(
		"2c282814-d165-4625-8ed3-492f82c57116"  => "admin",
		"a3253f9d-0741-4838-8583-20816cd63e11"  => "perusahaan",
		"adc5ce5d-0491-4d88-b9d4-8bc11b40415a"  => "pegawai",
		"ef40c680-03f0-45b9-ab98-290200f5ff13"  => "customer"
	);
	
	public function __construct() {
		parent::__construct();
		checkAuthUser('Perusahaan');
	}

	public function index()
	{
		$perusahaan = $this->db->get_where('perusahaan', ["user_id" => $this->session->userdata('id')])->row_array();
		$data = [
			'title'             => 'Dashboard',
			'title_main_header' => 'Dashboard',
			'data_perusahaan'   => $perusahaan,
			'data_perusahaan2'  => $this->session->userdata(),
			'count_pesanan'     => $this->db->get_where('pesanan', ['perusahaan_id' => $perusahaan['id']])->result_array()
		];
		$this->load->view('perusahaan/header', $data);
		$this->load->view('perusahaan/navigator', $data);
		$this->load->view('perusahaan/main_header', $data);
		$this->load->view('perusahaan/index', $data);
		$this->load->view('perusahaan/footer', $data);
	}

	public function manage() {
		$perusahaan = $this->db->get_where('perusahaan', ["user_id" => $this->session->userdata('id')])->row_array();
		$this->db
			 ->select('
				 j.*,
				 jt.type,
				 p.nama,
				 p.nomor_ponsel,
				 p.latlon,
				 p.logo_perusahaan
			 ')
			 ->from('jasa_pivot_type jpt')
			 ->join('jasa j', 'jpt.jasa_id=j.id')
			 ->join('jasa_type jt', 'jpt.jasa_type_id=jt.id')
			 ->join('perusahaan p', 'j.perusahaan_id=p.id')
			 ->where('p.user_id', $this->session->userdata('id'));
		$jasa = $this->db->get()->result_array();
		rsort($jasa);
		$data = [
			'data_jasa'         => $jasa,
			'data_jasa_type'    => $this->db->get('jasa_type')->result_array(),
			'title'             => 'Manage',
			'title_main_header' => 'Manage Perusahaan',
			'data_perusahaan'   => $perusahaan,
			'data_perusahaan2'  => $this->session->userdata(),
			'count_pesanan'     => $this->db->get_where('pesanan', ['perusahaan_id' => $perusahaan['id']])->result_array()
		];
		if(isset($_POST['type_jasa'])) {
			if($_POST['type_jasa'] == 'semua_jasa') {
					$this->db
						 ->select('
						 	j.*,
						 	jt.type,
						 	p.nama,
						 	p.nomor_ponsel,
						 	p.latlon,
						 	p.logo_perusahaan
						 ')
						->from('jasa_pivot_type jpt')
						->join('jasa j', 'jpt.jasa_id=j.id')
						->join('jasa_type jt', 'jpt.jasa_type_id=jt.id')
						->join('perusahaan p', 'j.perusahaan_id=p.id')
						->where('p.user_id', $this->session->userdata('id'));
			}else{
					$this->db
						 ->select('
						 	j.*,
						 	jt.type,
						 	p.nama,
						 	p.nomor_ponsel,
						 	p.latlon,
						 	p.logo_perusahaan
						 ')
						->from('jasa_pivot_type jpt')
						->join('jasa j', 'jpt.jasa_id=j.id')
						->join('jasa_type jt', 'jpt.jasa_type_id=jt.id')
						->join('perusahaan p', 'j.perusahaan_id=p.id')
						->where('p.user_id', $this->session->userdata('id'))
						->where('jt.type', $_POST['type_jasa']);
			}
			$data['data_jasa'] = $this->db->get()->result_array();
			$this->load->view('perusahaan/header', $data);
			$this->load->view('perusahaan/navigator', $data);
			$this->load->view('perusahaan/main_header', $data);
			$this->load->view('perusahaan/manage_perusahaan', $data);
			$this->load->view('perusahaan/footer', $data);
		}else if(isset($_POST['manage'])){
			// jika logo perusahaan diubah
			$edited_perusahaan_logo = $_FILES['logo_perusahaan']['name'];
			if($edited_perusahaan_logo) {
				$config = array(
					'allowed_types' => 'jpeg|jpg|png',
					'max_size'      => '2048',
					'upload_path'   => './assets/argon/img/perusahaan/',
					'encrypt_name'  => TRUE
				);
				$this->load->library('upload', $config);

				if($this->upload->do_upload('logo_perusahaan')) {
					$new_logo = $this->upload->data('file_name');
					unlink(FCPATH."assets/argon/img/perusahaan/".$data['data_perusahaan']['logo_perusahaan']);
					$this->db->set('logo_perusahaan', $new_logo);
				}else{
					if($this->upload->display_errors() == "<p>The filetype you are attempting to upload is not allowed.</p>") {
						$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Gagal</strong> edit logo perusahaan, format foto harus jpg / png /jpeg.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
						redirect('perusahaan');
					} else if($this->upload->display_errors() == "<p>The file you are attempting to upload is larger than the permitted size.</p>") {
						$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Gagal</strong> edit logo perusahaan, size foto tidak boleh lebih dari 2mb.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
						redirect('perusahaan');
					} else {
						echo $this->upload->display_errors();die;	
					}
				}
			}

			// jika foto npwp diubah
			$edited_foto_npwp = $_FILES['foto_npwp']['name'];
			if($edited_foto_npwp) {
				$config = array(
					'allowed_types' => 'jpeg|jpg|png',
					'max_size'      => '2048',
					'upload_path'   => './assets/argon/img/npwp/',
					'encrypt_name'  => TRUE
				);
				$this->load->library('upload', $config);

				if($this->upload->do_upload('foto_npwp')) {
					$new_logo = $this->upload->data('file_name');
					unlink(FCPATH."assets/argon/img/npwp/".$data['data_perusahaan']['foto_npwp']);
					$this->db->set('foto_npwp', $new_logo);
				}else{
					if($this->upload->display_errors() == "<p>The filetype you are attempting to upload is not allowed.</p>") {
						$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Gagal</strong> edit logo perusahaan, format foto harus jpg / png /jpeg.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
						redirect('perusahaan');
					} else if($this->upload->display_errors() == "<p>The file you are attempting to upload is larger than the permitted size.</p>") {
						$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Gagal</strong> edit logo perusahaan, size foto tidak boleh lebih dari 2mb.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
						redirect('perusahaan');
					} else {
						echo $this->upload->display_errors();die;	
					}
				}
			}

			// jika foto ktp diubah
			$edited_foto_ktp = $_FILES['foto_ktp']['name'];
			if($edited_foto_ktp) {
				$config = array(
					'allowed_types' => 'jpeg|jpg|png',
					'max_size'      => '2048',
					'upload_path'   => './assets/argon/img/ktp/',
					'encrypt_name'  => TRUE
				);
				$this->load->library('upload', $config);

				if($this->upload->do_upload('foto_ktp')) {
					$new_logo = $this->upload->data('file_name');
					unlink(FCPATH."assets/argon/img/ktp/".$data['data_perusahaan']['foto_ktp']);
					$this->db->set('foto_ktp', $new_logo);
				}else{
					if($this->upload->display_errors() == "<p>The filetype you are attempting to upload is not allowed.</p>") {
						$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Gagal</strong> edit logo perusahaan, format foto harus jpg / png /jpeg.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
						redirect('perusahaan');
					} else if($this->upload->display_errors() == "<p>The file you are attempting to upload is larger than the permitted size.</p>") {
						$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Gagal</strong> edit logo perusahaan, size foto tidak boleh lebih dari 2mb.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
						redirect('perusahaan');
					} else {
						echo $this->upload->display_errors();die;	
					}
				}
			}
			$this->db->set('nama', htmlspecialchars($this->input->post('nama_perusahaan')));
			$this->db->set('nomor_ponsel', $this->input->post('nomor_ponsel'));
			$this->db->set('alamat', htmlspecialchars($this->input->post('alamat')));
			$this->db->set('nomor_npwp', $this->input->post('nomor_npwp'));
			$this->db->set('nomor_ktp', $this->input->post('nomor_ktp'));
			$this->db->set('latlon', $this->input->post('latlon'));
			$this->db->where('id', $data['data_perusahaan']['id']);
			$this->db->update('perusahaan');
			$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Data Perusahaan</strong> berhasil di ubah.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
			redirect('perusahaan/manage');
		}else{
			$this->load->view('perusahaan/header', $data);
			$this->load->view('perusahaan/navigator', $data);
			$this->load->view('perusahaan/main_header', $data);
			$this->load->view('perusahaan/manage_perusahaan', $data);
			$this->load->view('perusahaan/footer', $data);
		}
	}

	public function edit_jasa($id)
	{
		$perusahaan = $this->db->get_where('perusahaan', ["user_id" => $this->session->userdata('id')])->row_array();
		$this->db
			 ->select('
				 j.*,
				 jt.type,
				 jk.keyword,
				 p.nama,
				 p.nomor_ponsel,
				 p.latlon,
				 p.logo_perusahaan
			 ')
			 ->from('jasa_pivot_type jpt')
			 ->join('jasa j', 'jpt.jasa_id=j.id')
			 ->join('jasa_type jt', 'jpt.jasa_type_id=jt.id')
			 ->join('jasa_keyword jk', 'j.jasa_keyword_id=jk.id')
			 ->join('perusahaan p', 'j.perusahaan_id=p.id')
			 ->where('p.user_id', $this->session->userdata('id'))
			 ->where('j.id', $id);
		$jasa = $this->db->get()->row_array();
		if($jasa) {
			$data = [
				'title'             => 'Edit Jasa',
				'data_jasa'         => $jasa,
				'title_main_header' => 'Edit Jasa',
				'data_perusahaan'   => $perusahaan,
				'data_perusahaan2'  => $this->session->userdata(),
				'count_pesanan'     => $this->db->get_where('pesanan', ['perusahaan_id' => $perusahaan['id']])->result_array(),
				'data_keyword'      => $this->db->get('jasa_keyword')->result_array(),
				'data_type_jasa'    => $this->db->get('jasa_type')->result_array(),
			];
			if(!isset($_POST['edit_jasa'])) {
				$this->load->view('perusahaan/header', $data);
				$this->load->view('perusahaan/navigator', $data);
				$this->load->view('perusahaan/main_header', $data);
				$this->load->view('perusahaan/edit_jasa', $data);
				$this->load->view('perusahaan/footer', $data);
			}else{
				$this->db->set('nama_jasa', $_POST['nama_jasa']);
				$this->db->set('description', $_POST['description']);
				$this->db->set('harga', $_POST['harga']);
				$this->db->set('jasa_keyword_id', $_POST['keyword_jasa']);
				$this->db->where('id', $id);
				$this->db->update('jasa');

				$this->db->set('jasa_type_id', $_POST['type_jasa']);
				$this->db->where('jasa_id', $id);
				$this->db->update('jasa_pivot_type');

				$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Data Jasa</strong> berhasil di ubah.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
				redirect('perusahaan/manage');
			}
		}else{
			show_error('Data jasa tidak valid', 400);
		}
	}
	
	public function hapus_jasa($id) {
		$jasa = $this->db->get_where('jasa', ['id' => $id])->row_array();
		if($jasa) {
			$this->db->delete('jasa', ['id' => $id]);
			$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Data Jasa</strong> berhasil di hapus.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
			redirect('perusahaan/manage');
		}else{
			show_error('Data jasa tidak valid', 400);
		}
	}

	public function tambah_jasa() {
		$perusahaan = $this->db->get_where('perusahaan', ["user_id" => $this->session->userdata('id')])->row_array();
		if(!isset($_POST['tambah_jasa'])) {
			$data = [
				'title'             => 'Tambah Jasa',
				'title_main_header' => 'Tambah Jasa '.$perusahaan['nama'],
				'data_perusahaan'   => $perusahaan,
				'data_perusahaan2'  => $this->session->userdata(),
				'data_keyword'      => $this->db->get('jasa_keyword')->result_array(),
				'data_type_jasa'    => $this->db->get('jasa_type')->result_array(),
				'count_pesanan'     => $this->db->get_where('pesanan', ['perusahaan_id' => $perusahaan['id']])->result_array()
			];
			$this->load->view('perusahaan/header', $data);
			$this->load->view('perusahaan/navigator', $data);
			$this->load->view('perusahaan/main_header', $data);
			$this->load->view('perusahaan/tambah_jasa', $data);
			$this->load->view('perusahaan/footer', $data);
		}else{
			$jasa_id = uniqid();
			$data_jasa = [
				"id"               => $jasa_id,
				"nama_jasa"        => htmlspecialchars($this->input->post('nama_jasa')),
				"description"      => htmlspecialchars($this->input->post('description')),
				"harga"            => $this->input->post('harga'),
				"perusahaan_id"    => $perusahaan['id'],
				"jasa_keyword_id"  => $this->input->post('keyword_jasa')
			];
			$data_jasa_pivot_type = [
				"id"            => uniqid(),
				"jasa_id"       => $jasa_id,
				"jasa_type_id"  => $this->input->post('type_jasa')
			];
			$this->db->insert("jasa", $data_jasa);
			$this->db->insert("jasa_pivot_type", $data_jasa_pivot_type);
			$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Berhasil</strong> tambah jasa.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
			redirect('perusahaan/manage');
		}
	}

	public function pegawai() {
		$perusahaan = $this->db->get_where('perusahaan', ["user_id" => $this->session->userdata('id')])->row_array();
		$pegawai    = $this->db->select('*')->from('pegawai p')->join('users u', 'p.user_id=u.id')->where('perusahaan_id', $perusahaan['id'])->get()->result_array();
		rsort($pegawai);
		$data = [
			'title'             => 'Pegawai',
			'title_main_header' => 'Pegawai '.$perusahaan['nama'],
			'data_perusahaan'   => $perusahaan,
			'data_perusahaan2'  => $this->session->userdata(),
			"data_pegawai"      => $pegawai,
			'count_pesanan'     => $this->db->get_where('pesanan', ['perusahaan_id' => $perusahaan['id']])->result_array()
		];
		$this->load->view('perusahaan/header', $data);
		$this->load->view('perusahaan/navigator', $data);
		$this->load->view('perusahaan/main_header', $data);
		$this->load->view('perusahaan/pegawai', $data);
		$this->load->view('perusahaan/footer', $data);
	}

	public function tambah_pegawai() {
		$perusahaan = $this->db->get_where('perusahaan', ["user_id" => $this->session->userdata('id')])->row_array();
		$pegawai    = $this->db->get("pegawai")->result_array();
		if(!isset($_POST['tambah_pegawai'])) {
			$data = [
				'title'             => 'Pegawai',
				'title_main_header' => 'Pegawai '.$perusahaan['nama'],
				'data_perusahaan'   => $perusahaan,
				'data_perusahaan2'  => $this->session->userdata(),
				"data_pegawai"      => $pegawai,
				'count_pesanan'     => $this->db->get_where('pesanan', ['perusahaan_id' => $perusahaan['id']])->result_array()
			];
			$this->load->view('perusahaan/header', $data);
			$this->load->view('perusahaan/navigator', $data);
			$this->load->view('perusahaan/main_header', $data);
			$this->load->view('perusahaan/tambah_pegawai', $data);
			$this->load->view('perusahaan/footer', $data);
		}else{
			$cek_email = $this->db->select('*')->from('users')->where('email', $this->input->post('email'))->get()->row_array();

			if($cek_email) {
				$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Gagal</strong> edit email, email yang anda masukkan sudah digunakan.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
				redirect('perusahaan');
			}
			$upload_image = $_FILES['foto_pegawai']['name'];
			$config['upload_path']   = './assets/argon/img/pegawai/';
			$config['allowed_types'] = 'jpg|png|jpeg';
			$config['max_size']      = '2048';
			$config['encrypt_name']  = TRUE;

			$this->load->library('upload', $config);

			if($this->upload->do_upload('foto_pegawai')) {
				$new_image = $this->upload->data('file_name');
				$user_id = uniqid();
				$data_user = [
					"id"           => $user_id,
					"email"        => $this->input->post('email'),
					"password"     => password_hash($this->input->post('password'), PASSWORD_DEFAULT),
					"role_id"      => array_search("pegawai",$this->data_role),
					"is_verified"  => 1,
					"date_joined"  => formatHariTanggal(date('Y-m-d'))
				];
				$data_pegawai = [
					"id"            => uniqid(),
					"nama"          => htmlspecialchars($this->input->post('nama')),
					"umur"          => $this->input->post('umur'),
					"nomor_ponsel"  => $this->input->post('nomor_ponsel'),
					"nomor_ktp"     => $this->input->post('nomor_ktp'),
					"gender"        => $this->input->post('gender'),
					"perusahaan_id" => $perusahaan['id'],
					"user_id"       => $user_id,
					"foto_pegawai"  => $new_image,
					"status"        => 1
				];
				$addUser    = $this->db->insert('users', $data_user);
				$addPegawai = $this->db->insert('pegawai', $data_pegawai);
				if(!$addUser || !$addPegawai) {
					unlink(BASEPATH."../assets/argon/img/pegawai/".$new_image);
					$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Gagal</strong> tambah pegawai.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
					redirect('perusahaan/pegawai');
				}else{
					$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Berhasil</strong> tambah pegawai.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
					redirect('perusahaan/pegawai');
				}
			}else{
				if($this->upload->display_errors() == "<p>The filetype you are attempting to upload is not allowed.</p>") {
					$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Gagal</strong> upload foto pegawai, format foto harus jpg / png /jpeg.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
					redirect('perusahaan/pegawai');
				} else if($this->upload->display_errors() == "<p>The file you are attempting to upload is larger than the permitted size.</p>") {
					$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Gagal</strong> upload foto pegawai, size foto tidak boleh lebih dari 2mb.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
					redirect('perusahaan/pegawai');
				} else {
					echo $this->upload->display_errors();die;	
				}
			}
		}
	}

	public function hapus_pegawai($id) {
		$cek = $this->db->get_where('pegawai', ['id' => $id])->row_array();
		if($cek) {
			$hapus = $this->db->delete('pegawai', ['id' => $id]);
			$this->db->delete('users', ['id' => $cek['user_id']]);
			if($hapus){
				unlink(BASEPATH."../assets/argon/img/pegawai/".$cek['foto_pegawai']);
				$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Berhasil</strong> hapus data pegawai.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
				redirect('perusahaan/pegawai');
			}else{
				$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Gagal</strong> hapus pegawai.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
			redirect('perusahaan/pegawai');
			}
		}else{
			$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Gagal</strong> hapus, pegawai tidak terdaftar.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
			redirect('perusahaan/pegawai');
		}
	}

	public function edit_pegawai($id) {
		if(!isset($_POST['edit'])) {
			show_404();
		}else{
			$data_pegawai = $this->db->get_where('pegawai', ['user_id' => $id])->row_array();
			if($data_pegawai) {

				$this->db->set('nama', $this->input->post('nama_pegawai'));
				$this->db->set('umur', $this->input->post('umur'));
				$this->db->set('nomor_ponsel', $this->input->post('nomor_ponsel'));
				$this->db->set('gender', $this->input->post('gender'));
				$this->db->where('id', $id);
				$this->db->update('pegawai');
				$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Berhasil</strong> edit data pegawai.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
				redirect('perusahaan/pegawai');
			} else{
				$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Gagal</strong> edit, pegawai tidak terdaftar.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
				redirect('perusahaan/pegawai');
			}
		}
	}

	public function edit_blocked_pegawai() 
	{
		$user_id = $this->input->post('id');
		$result = $this->db->get_where('users', ['id' => $user_id])->row_array();
		if($result['is_blocked'] == 1) {
			$this->db->set('is_blocked', 0);
			$this->db->where('id', $user_id);
			$this->db->update('users');
			$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Berhasil</strong> membuka blokir pegawai.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
		}else{
			$this->db->set('is_blocked', 1);
			$this->db->where('id', $user_id);
			$this->db->update('users');
			$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Berhasil</strong> memblokir pegawai.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
		}
	}

	public function pesanan()
	{
		$perusahaan = $this->db->get_where('perusahaan', ["user_id" => $this->session->userdata('id')])->row_array();
		$this->db
			 ->select('
				 ps.*,
				 j.nama_jasa,
				 j.description,
				 j.harga,
				 c.nama,
				 c.alamat,
				 c.nomor_ponsel,
				 c.foto_customer,
				 c.latlon
			')
			 ->from('pesanan ps')
			 ->join('jasa j', 'ps.jasa_id=j.id')
			 ->join('customer c', 'ps.customer_id=c.id')
			 ->where('ps.status !=', 4)
			 ->where('ps.perusahaan_id', $perusahaan['id']);
		$pesanan = $this->db->get()->result_array();
		rsort($pesanan);
		$data_jasa = [];
		// echo '<pre>';print_r($pesanan); die;
		foreach($pesanan as $i => $data) {
			$this->db
				 ->select('*')
				 ->from('jasa_pivot_type jpt')
				 ->join('jasa j', 'jpt.jasa_id=j.id')
				 ->join('jasa_type jt', 'jpt.jasa_type_id=jt.id')
				 ->join('perusahaan p', 'j.perusahaan_id=p.id')
				 ->join('jasa_keyword jk', 'j.jasa_keyword_id=jk.id')
				 ->where('jpt.jasa_id', $data['jasa_id']);
			array_push($data_jasa, $this->db->get()->row_array());	
			$latlon_customer   = explode(", ", $data['latlon']);
			$latlon_perusahaan = explode(", ", $perusahaan['latlon']);
			$data_jasa[$i]['jarak'] = hitungJarak($latlon_perusahaan[0], $latlon_perusahaan[1],$latlon_customer[0], $latlon_customer[1]);
		}
		rsort($data_jasa);
		$data = [
			'title'             => 'Pesanan Customer Perusahaan',
			'title_main_header' => 'Pesanan Customer Perusahaan',
			'data_perusahaan'   => $perusahaan,
			'data_perusahaan2'  => $this->session->userdata(),
			'data_pesanan'      => $pesanan,
			'data_jasa'         => $data_jasa,
			'count_pesanan'     => $this->db->get_where('pesanan', ['perusahaan_id' => $perusahaan['id']])->result_array()
		];
		$this->load->view('perusahaan/header', $data);
		$this->load->view('perusahaan/navigator', $data);
		$this->load->view('perusahaan/main_header', $data);
		$this->load->view('perusahaan/pesanan', $data);
		$this->load->view('perusahaan/footer', $data);
	}

	public function pesanan_detail($jasa_id)
	{
		$perusahaan = $this->db->get_where('perusahaan', ["user_id" => $this->session->userdata('id')])->row_array();
		$this->db
			 ->select('*')
			 ->from('pesanan ps')
			 ->join('customer c', 'ps.customer_id=c.id')
			 ->where('ps.id', $jasa_id);
		$pesanan = $this->db->get()->row_array();
		$this->db
		->select('*')
		->from('jasa_pivot_type jpt')
			 ->join('jasa j', 'jpt.jasa_id=j.id')
			 ->join('jasa_type jt', 'jpt.jasa_type_id=jt.id')
			 ->join('jasa_keyword jk', 'j.jasa_keyword_id=jk.id')
			 ->join('perusahaan p', 'j.perusahaan_id=p.id')
			 ->where('jpt.jasa_id', $pesanan['jasa_id']);
		$data_jasa = $this->db->get()->row_array();
		if($pesanan && $data_jasa) {
			$this->db
				 ->select('*')
				 ->from('material m')
				 ->join('merek mr', 'm.merek_id=mr.id')
				 ->where('m.jasa_keyword_id', $data_jasa['jasa_keyword_id']);
			$data_material = $this->db->get()->result_array();
			// echo '<pre>';print_r([$data_jasa, $pesanan, $data_material]); die;
			$latlon_customer   = explode(", ", $pesanan['latlon']);
			$latlon_perusahaan = explode(", ", $perusahaan['latlon']);
			$data_jasa['jarak'] = hitungJarak($latlon_perusahaan[0], $latlon_perusahaan[1],$latlon_customer[0], $latlon_customer[1]);
			$data_pegawai = [];
			if($pesanan['pegawai_id'] != "") {
				$id_pegawai = explode(",", $pesanan['pegawai_id']);
				foreach($id_pegawai as $id) {
					array_push($data_pegawai, $this->db->get_where('pegawai', ['id' => $id])->row_array());
				}
			}
			$data = [
				'title'               => 'Detail Pesanan Pakejasa',
				'title_main_header'   => 'Detail Pesanan Pakejasa',
				'data_perusahaan'     => $perusahaan,
				'data_perusahaan2'    => $this->session->userdata(),
				'data_pesanan'        => $pesanan,
				'data_jasa'           => $data_jasa,
				'data_pegawai'        => $data_pegawai,
				'data_tambah_pegawai' => $this->db->get_where('pegawai', ['perusahaan_id' => $perusahaan['id'], 'status !=' => 0])->result_array(), // status pegawai 1 = ready dan 0 = sedang bekerja
				'data_material'       => $data_material,
				'count_pesanan'       => $this->db->get_where('pesanan', ['perusahaan_id' => $perusahaan['id']])->result_array()
			];
			if($pesanan['status'] == 1) {
				if(!isset($_POST['verif'])) {
					$this->load->view('perusahaan/header', $data);
					$this->load->view('perusahaan/navigator', $data);
					$this->load->view('perusahaan/main_header', $data);
					$this->load->view('perusahaan/wait_verified_pesanan', $data);
					$this->load->view('perusahaan/footer', $data);
				}else{
					$this->db->set('status', 2);
					$this->db->where('id', $jasa_id);
					$this->db->update('pesanan');
					$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Berhasil</strong> verifikasi pesanan.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
					redirect("perusahaan/pesanan/$jasa_id/detail");
				}
			}else if($pesanan['status'] == 2) {
				if(!isset($_POST['tambah_pegawai'])) {
					$this->load->view('perusahaan/header', $data);
					$this->load->view('perusahaan/navigator', $data);
					$this->load->view('perusahaan/main_header', $data);
					$this->load->view('perusahaan/verified_pesanan', $data);
					$this->load->view('perusahaan/footer', $data);
				}else{
					if(isset($_POST['id_pegawai'])) {
						list('id_pegawai' => $id_pegawai) = $_POST;
						$pegawai_id = "";
						foreach($id_pegawai as $id) {
							$pegawai_id .= "$id,";
							$this->db->set('status', 0);
							$this->db->where('id', $id);
							$this->db->update('pegawai');
						}
						$pegawai_id = substr($pegawai_id, 0, -1);

						$this->db->set('pegawai_id', $pegawai_id);
						$this->db->where('id', $jasa_id);
						$this->db->update('pesanan');
						$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Berhasil</strong> menambahkan pegawai.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
						redirect("perusahaan/pesanan/$jasa_id/detail");
					}else{
						redirect("perusahaan/pesanan/$jasa_id/detail");
					}
				}
			}
		}else{
			show_error('Data pesanan tidak valid', 400);
		}
		
	}


	public function setting() {
		$perusahaan = $this->db->get_where('perusahaan', ["user_id" => $this->session->userdata('id')])->row_array();
		$data = [
			'title'             => 'Setting Akun Perusahaan',
			'title_main_header' => 'Setting Akun Perusahaan',
			'data_perusahaan'   => $perusahaan,
			'data_perusahaan2'  => $this->session->userdata(),
			'count_pesanan'     => $this->db->get_where('pesanan', ['perusahaan_id' => $perusahaan['id']])->result_array()
		];
		if(!isset($_POST['edit_data'])) {
			$this->load->view('perusahaan/header', $data);
			$this->load->view('perusahaan/navigator', $data);
			$this->load->view('perusahaan/main_header', $data);
			$this->load->view('perusahaan/setting', $data);
			$this->load->view('perusahaan/footer', $data);
		}else{
			$email           = $this->input->post('email');
			$edited_password = $this->input->post('password');
			$new_password    = password_hash($edited_password, PASSWORD_DEFAULT);
			$old_password    = $this->input->post('password_lama');
			$cek_email       = $this->db->select('*')->from('users')->where_not_in('email', $data['data_perusahaan2']['email'])->where('email', $email)->get()->row_array();

			if($cek_email) {
				$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Gagal</strong> edit email, email yang anda masukkan sudah digunakan.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
				redirect('perusahaan');
			}
			// jika password mau diubah
			if($edited_password) {
				if(!$old_password) {
					$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Gagal</strong> ganti password, password lama tidak boleh kosong.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
					redirect('perusahaan');
				}else if(password_verify($old_password, $data['data_perusahaan2']['password'])) {
					$this->db->set('password', $new_password);
				}
			}
			$this->db->set('email', $email);
			$this->db->where('id', $data['data_perusahaan2']['id']);
			$up = $this->db->update('users');

			$this->session->set_userdata('email', $email);
			$this->session->set_userdata('password', $new_password);

			$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Akun Perusahaan</strong> berhasil di ubah.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
			redirect('perusahaan');
		}
	}

}

?>