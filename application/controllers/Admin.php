<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Admin extends CI_Controller {

	/**
	*	 Generated by Generator
	**/

	private $data_role = array(
		"2c282814-d165-4625-8ed3-492xf82c57116"  => "admin",
		"a3253f9d-0741-4838-8583-20816cd63e11"  => "perusahaan",
		"adc5ce5d-0491-4d88-b9d4-8bc11b40415a"  => "pegawai",
		"ef40c680-03f0-45b9-ab98-290200f5ff13"  => "customer"
	);

	public function login() {
		if(isset($_POST['login'])) {
			$this->db
				 ->select('*')
				 ->from('users u')
				 ->join('user_role ur', 'u.role_id=ur.id')
				 ->where('u.email', $this->input->post('email'));
			$admin = $this->db->get()->row_array();
			if($admin) {
				if(password_verify($this->input->post('password'), $admin['password'])) {
					if($admin['role'] != 'Admin') {
						$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Anda</strong> bukanlah seorang admin.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
						redirect('admin/login');
					}else{
						$this->session->set_userdata($admin);
						redirect('admin');	
					}
				}else{
					$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Password</strong> anda salah.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
					redirect('admin/login');
				}
			}else{
				$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>Email</strong> anda tidak terdaftar.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
				redirect('admin/login');
			}
		}else{
			$data = [
				'title' => 'Admin'
			];
			$this->load->view('auth/login', $data);
		}
	}

	public function index()
	{
		checkAuthAdmin();	

		$this->db
			 ->select('*')
			 ->from('admin a')
			 ->join('users u', 'a.user_id=u.id')
			 ->where('u.email', $this->session->userdata('email'));
		$data = [
			'title'       => 'Dashboard',
			'data_admin'  => $this->db->get()->row_array()
		];
		$this->load->view('admin/header', $data);
		$this->load->view('admin/navigator');
		$this->load->view('admin/main_header');
		$this->load->view('admin/index');
		$this->load->view('admin/footer');
	}

	/**
	 * @method Perusahaan
	 * */ 

	public function perusahaan() {
		checkAuthAdmin();
		$this->db
			 ->select('*')
			 ->from('admin a')
			 ->join('users u', 'a.user_id=u.id')
			 ->where('u.email', $this->session->userdata('email'));
		$data = [
			'title'           => 'Data Perusahaan',
			'data_admin'      => $this->db->get()->row_array(),
			'data_perusahaan' => $this->db->select('*')->from('perusahaan p')->join('users u', 'p.user_id=u.id')->get()->result_array()
		];
		$this->load->view('admin/header', $data);
		$this->load->view('admin/navigator');
		$this->load->view('admin/main_header');
		$this->load->view('admin/data_perusahaan', $data);
		$this->load->view('admin/footer');
	}

	public function edit_verif_perusahaan() {
		$user_id = $this->input->post('id');

		$result = $this->db->get_where('users', ['id' => $user_id])->row_array();
		if($result['is_verified'] == 1) {
			$this->db->set('is_verified', 0);
			$this->db->where('id', $user_id);
			$this->db->update('users');
			$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Berhasil</strong> unverifikasi akun perusahaan.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
		}else{
			$this->db->set('is_verified', 1);
			$this->db->where('id', $user_id);
			$this->db->update('users');
			$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Berhasil</strong> verifikasi akun perusahaan.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
		}
	}

	public function edit_blocked_perusahaan() {
		$user_id = $this->input->post('id');

		$result = $this->db->get_where('users', ['id' => $user_id])->row_array();
		if($result['is_blocked'] == 1) {
			$this->db->set('is_blocked', 0);
			$this->db->where('id', $user_id);
			$this->db->update('users');
			$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Berhasil</strong> membuka blokir akun perusahaan.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
		}else{
			$this->db->set('is_blocked', 1);
			$this->db->where('id', $user_id);
			$this->db->update('users');
			$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Berhasil</strong> memblokir akun perusahaan.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
		}
	}

	/**
	 * End @method Perusahaan
	 * */ 

	/**
	 * @method Pegawai
	 * */  

	public function pegawai()
	{
		checkAuthAdmin();
		$this->db
			 ->select('*')
			 ->from('admin a')
			 ->join('users u', 'a.user_id=u.id')
			 ->where('u.email', $this->session->userdata('email'));
		$data = [
			'title'           => 'Data Pegawai',
			'data_admin'      => $this->db->get()->row_array(),
			'data_pegawai'    => $this->db->select('*')->from('pegawai p')->join('users u', 'p.user_id=u.id')->join('perusahaan pr', 'p.perusahaan_id=pr.id')->get()->result_array()
		];
		$this->load->view('admin/header', $data);
		$this->load->view('admin/navigator');
		$this->load->view('admin/main_header');
		$this->load->view('admin/data_pegawai');
		$this->load->view('admin/footer');
	}

	/**
	 * End @method Pegawai
	 * */ 

	/**
	 * @method Customer
	 * */  

	public function customer() {
		checkAuthAdmin();
		$this->db
			 ->select('*')
			 ->from('admin a')
			 ->join('users u', 'a.user_id=u.id')
			 ->where('u.email', $this->session->userdata('email'));
		$data = [
			'title'           => 'Data Customer',
			'data_admin'      => $this->db->get()->row_array(),
			'data_customer'   => $this->db->select('*')->from('customer p')->join('users u', 'p.user_id=u.id')->get()->result_array()
		];
		$this->load->view('admin/header', $data);
		$this->load->view('admin/navigator');
		$this->load->view('admin/main_header');
		$this->load->view('admin/data_customer');
		$this->load->view('admin/footer');
	}

	public function edit_blocked_customer() {
		$user_id = $this->input->post('id');

		$result = $this->db->get_where('users', ['id' => $user_id])->row_array();
		if($result['is_blocked'] == 1) {
			$this->db->set('is_blocked', 0);
			$this->db->where('id', $user_id);
			$this->db->update('users');
			$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Berhasil</strong> membuka blokir customer.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
		}else{
			$this->db->set('is_blocked', 1);
			$this->db->where('id', $user_id);
			$this->db->update('users');
			$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade show" role="alert"><strong>Berhasil</strong> memblokir akun customer.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
		}
	}

	/**
	 * End @method Customer
	 * */  

	
	/**
	 * @method Verifikasi
	 * */ 

	public function verifikasi()
	{
		checkAuthAdmin();
		$this->db
			 ->select('*')
			 ->from('admin a')
			 ->join('users u', 'a.user_id=u.id')
			 ->where('u.email', $this->session->userdata('email'));
		$data = [
			'title'                => 'Data Pegawai',
			'data_admin'           => $this->db->get()->row_array(),
			'data_verifikasi'      => $this->db->select('u.*, ur.role')->from('users u')->join('user_role ur', 'u.role_id=ur.id')->where('u.is_verified', 0)->get()->result_array(),
			'data_verifikasi_user' => []
		];
		array_filter($data['data_verifikasi'], function($data) {
			if($data['role'] == 'Admin') {
				$data['data_verifikasi_user'] = [$this->db->get_where('admin', ['user_id' => $data['id']])->row_array()];
			}else if($data['role'] == 'Perusahaan') {
				$data['data_verifikasi_user'] = [$this->db->get_where('perusahaan', ['user_id' => $data['id']])->row_array()];
			}else if($data['role'] == 'Pegawai') {
				$data['data_verifikasi_user'] = [$this->db->get_where('pegawai', ['user_id' => $data['id']])->row_array()];
			}else if($data['role'] == 'Customer') {
				$data['data_verifikasi_user'] = [$this->db->get_where('customer', ['user_id' => $data['id']])->row_array()];
			}
		});
		var_dump($data);
		die;
		$this->load->view('admin/header', $data);
		$this->load->view('admin/navigator');
		$this->load->view('admin/main_header');
		$this->load->view('admin/data_verifikasi');
		$this->load->view('admin/footer');
	}

	public function logout()
	{
		$this->session->unset_userdata("id");
		$this->session->unset_userdata("email");
		$this->session->unset_userdata("password");
		$this->session->unset_userdata("role_id");
		$this->session->unset_userdata("is_verified");
		$this->session->unset_userdata("date_joined");
		redirect('admin/login');
	}

}

?>